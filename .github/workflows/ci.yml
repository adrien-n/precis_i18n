# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master ]
  schedule:
    # Every Saturday at 4:30 AM UTC.
    - cron:  '30 4 * * 6'

jobs:
  build:

    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.4, 3.5, 3.6, 3.7, 3.8, 3.9, '3.10', pypy3]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install unicodedata2 (Python 3.7 only)
      if: matrix.python-version == '3.7'
      run: python -m pip install unicodedata2==12.0.0
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run Tests
      run: |
        python -c "import unicodedata; print(unicodedata.unidata_version)"
        python -m unittest discover -v
        python -m doctest README.rst
    - name: Test source package
      run: ./tools/test_python_package.sh
    - name: Run Code Coverage (Python 3.9 only)
      if: matrix.python-version == '3.9'
      run: |
        python -m pip install codecov
        coverage run --source precis_i18n -m unittest test/test_precis.py test/test_codepointset.py test/test_codec.py test/test_factory.py
        codecov
    - name: Run mypy to check type stubs
      run: |
        python -m pip install mypy
        mypy --strict python_i18n
